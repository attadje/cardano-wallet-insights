var n=new Headers;n.append("project_id","mainnetiSXrfNxhpPChKCnts2KX9MJ1eQ7exYgb");const e="https://cardano-mainnet.blockfrost.io/api/v0",a=async function(a){const r=await async function(e,a){try{const t=a?fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}):fetch(e,{method:"GET",headers:n}),s=await Promise.race([t,(r=120,new Promise((function(n,e){setTimeout((function(){e(new Error(`Request took too long! Timeout after ${r} second`))}),1e3*r)})))]),o=await s.json();if(!s.ok)throw new Error(`${o.message} (${s.status})`);return o}catch(n){throw n}var r}(`${e}/accounts/${a}/rewards`),t=[],s=[];return r.forEach((function(n){t.push(n.epoch),s.push(n.amount)})),{epochs:t,rewards:s}};var r=new class extends class{_clear(){this._parentElem.innerHTML=""}_clearCardValue(){this._parentCardValueElem.innerHTML=""}_clearCardBody(){this._parentCardBodyElem.innerHTML=""}_clearCardButton(){this._parentCardeButtonElem.innerHTML=""}renderSpiner(){this._clear(),this._parentElem.insertAdjacentHTML("beforeend",'\n    <div class="middle">\n      <div class="bar bar1"></div>\n      <div class="bar bar2"></div>\n      <div class="bar bar3"></div>\n      <div class="bar bar4"></div>\n      <div class="bar bar5"></div>\n      <div class="bar bar6"></div>\n      <div class="bar bar7"></div>\n      <div class="bar bar8"></div>\n    </div>\n    ')}_renderCardValue(n){return this._clearCardValue(),`\n      ${n}\n  `}_renderCardBody(n){return this._clearCardBody(),n}_renderChart(){return`<canvas id="${this._classChartID}"></canvas>`}_renderCardButton(){return'<label\n              class="btn btn-sm btn-primary btn-simple active"\n              id="mEpochs"\n            >\n              <input type="radio" name="options" checked />\n              <span\n                class="d-none d-sm-block d-md-block d-lg-block d-xl-block"\n                >1 m</span\n              >\n              <span class="d-block d-sm-none">\n                1 m\n              </span>\n          </label>'}}{_rewardsHistory;_epochsHistory;_classChartID="rewardsHist";_parentElem=document.querySelector(".rewardsCardBody");_parentCardValueElem=document.querySelector(".amountOfReward");_parentCardBodyElem=document.querySelector(".rewardsCardBody");_parentCardeButtonElem=document.querySelector(".buttonRewardsHist");_buttonID={oneMEpochs:6,sixMEpochs:36,oneYEpochs:73,maxEpochs:0};_chartData;_calcRewardAmount(n){const e=n.reduce(((n,e)=>n+e),0);return Number.parseFloat(e).toFixed(2)}_renderRewardsChart(){return this._renderCardBody(`<canvas id="${this._classChartID}"></canvas>`)}generateChart(n,e){this._rewardsHistory=e,this._epochsHistory=n;const a=this._calcRewardAmount(this._rewardsHistory);this._parentCardValueElem.insertAdjacentHTML("beforeend",this._renderCardValue(`â‚³ ${a}`)),this._parentCardBodyElem.insertAdjacentHTML("afterbegin",this._renderCardBody(this._renderChart())),this._parentCardeButtonElem.insertAdjacentHTML("afterbegin",this._renderCardButtonMarkup());const r=document.getElementById(this._classChartID).getContext("2d");var t=r.createLinearGradient(0,230,0,50);t.addColorStop(1,"rgba(72,72,176,0.1)"),t.addColorStop(.4,"rgba(72,72,176,0.0)"),t.addColorStop(0,"rgba(119,52,169,0)");var s={type:"line",data:{labels:n.slice(n.length-18,n.length),datasets:[{label:"Rewards",fill:!0,backgroundColor:t,borderColor:"#d346b1",borderWidth:2,borderDash:[],borderDashOffset:0,pointBackgroundColor:"#d346b1",pointBorderColor:"rgba(255,255,255,0)",pointHoverBackgroundColor:"#d346b1",pointBorderWidth:20,pointHoverRadius:4,pointHoverBorderWidth:15,pointRadius:4,data:e.slice(e.length-18,e.length)}]},options:{maintainAspectRatio:!1,legend:{display:!1},layout:{padding:6},tooltips:{backgroundColor:"#f5f5f5",titleFontColor:"#333",bodyFontColor:"#666",bodySpacing:10,xPadding:12,mode:"nearest",intersect:0,position:"nearest"},responsive:!0,scales:{yAxes:[{barPercentage:1.6,gridLines:{drawBorder:!1,color:"rgba(225,78,202,0.1)",zeroLineColor:"rgba(255,255,255,0)"},ticks:{beginAtZero:!0,min:0,suggestedMin:0,padding:10,fontColor:"#9a9a9a",callback:function(n,e){return e%2==0?n:""}}}],xAxes:[{barPercentage:1.6,gridLines:{drawBorder:!1,color:"rgba(225,78,202,0.0)",zeroLineColor:"transparent"},ticks:{display:!1,padding:10,fontColor:"#9a9a9a",callback:function(n,e){return e%4==0?n:""}}}]}}};this._chartData=new Chart(r,s),this._addHandelerButton()}_teste(n){const e=0==n?0:this._rewardsHistory.length-n,a=this._rewardsHistory.length,r=this._rewardsHistory.slice(e,a),t=this._chartData.config.data;t.datasets[0].data=r,t.labels=this._epochsHistory.slice(e,a),this._chartData.update()}_addHandelerButton(){Object.entries(this._buttonID).forEach((([n,e])=>{const a=document.querySelector(`#${n}`);a&&a.addEventListener("click",this._teste.bind(this,e))}))}_renderCardButtonMarkup(){return this._clearCardButton(),`\n    <label\n      class="btn btn-sm btn-primary btn-simple active"\n      id="oneMEpochs"\n    >\n      <input type="radio" name="options" checked />\n      <span\n        class="d-none d-sm-block d-md-block d-lg-block d-xl-block"\n        >1 m</span\n      >\n      <span class="d-block d-sm-none">\n        1 m\n      </span>\n    </label>\n    <label\n      class="btn btn-sm btn-primary btn-simple\n      id="sixMEpochs" ${this._rewardsHistory>36.5?"":"disabled"}>\n      <input\n        type="radio"\n        class="d-none d-sm-none"\n        name="options"\n      />\n      <span\n        class="d-none d-sm-block d-md-block d-lg-block d-xl-block"\n        >6 m</span\n      >\n      <span class="d-block d-sm-none">\n        6 m\n      </span>\n    </label>\n    <label\n    class="btn btn-sm btn-primary btn-simple\n    id="oneYEpochs" ${this._rewardsHistory>73?"":"disabled"}>\n    <input\n      type="radio"\n      class="d-none d-sm-none"\n      name="options"\n    />\n    <span\n      class="d-none d-sm-block d-md-block d-lg-block d-xl-block"\n      >1 a</span\n    >\n    <span class="d-block d-sm-none">\n      1 a\n    </span>\n  </label>\n    <label\n      class="btn btn-sm btn-primary btn-simple"\n      id="maxEpochs"\n    >\n      <input type="radio" class="d-none" name="options" />\n      <span\n        class="d-none d-sm-block d-md-block d-lg-block d-xl-block"\n        >Max.</span\n      >\n      <span class="d-block d-sm-none">\n        Max.\n      </span>\n    </label>\n    `}};!async function(){r.renderSpiner();const n=await a("stake1uyttshgm6jtejckv48tll58hfw3fg2ffrcc4d5qvcc4yc7q9jsalf"),e=n.rewards.flatMap((n=>n/1e6));r.generateChart(n.epochs,e)}();
//# sourceMappingURL=index.a97fdcb5.js.map
